[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\eduar\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\eduar\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 487.9072ms
[debug]       Load.loadUnit: defsScala took 0.9317ms
[debug] [Loading] Scanning directory C:\Users\eduar\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eduar\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 52.4848 ms
[debug]           Load.resolveProject(global-plugins) took 131.9664ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\eduar\.sbt\1.0\plugins, plugins: List(<none>))) took 254.1928ms
[debug] [Loading] Done in C:\Users\eduar\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 314.9137ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.9169ms
[debug]     Load.loadUnit(file:/C:/Users/eduar/.sbt/1.0/plugins/, ...) took 826.5151ms
[debug]   Load.apply: load took 1268.0711ms
[debug]   Load.apply: resolveProjects took 17.4895ms
[debug]   Load.apply: finalTransforms took 279.0429ms
[debug]   Load.apply: config.delegates took 33.3583ms
[debug]   Load.apply: Def.make(settings)... took 1426.4835ms
[debug]   Load.apply: structureIndex took 319.1755ms
[debug]   Load.apply: mkStreams took 3.0261ms
[info] loading global plugins from C:\Users\eduar\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 19637.4384ms
[debug]           Load.loadUnit: plugins took 73.9408ms
[debug]           Load.loadUnit: defsScala took 0.0129ms
[debug] [Loading] Scanning directory C:\Users\eduar\IdeaProjects\techprep\project
[debug]             Load.loadUnit: mkEval took 22.9041ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\eduar\IdeaProjects\techprep\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6001 ms
[info] loading settings for project techprep-build from idea.sbt ...
[debug]               Load.resolveProject(techprep-build) took 3.376ms
[debug]             Load.loadTransitive: finalizeProject(Project(id techprep-build, base: C:\Users\eduar\IdeaProjects\techprep\project, plugins: List(<none>))) took 7.6779ms
[debug] [Loading] Done in C:\Users\eduar\IdeaProjects\techprep\project, returning: (techprep-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7527.0386ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.7263ms
[debug]         Load.loadUnit(file:/C:/Users/eduar/IdeaProjects/techprep/project/, ...) took 7620.2384ms
[debug]       Load.apply: load took 7624.2547ms
[debug]       Load.apply: resolveProjects took 0.2046ms
[debug]       Load.apply: finalTransforms took 24.456ms
[debug]       Load.apply: config.delegates took 0.5029ms
[debug]       Load.apply: Def.make(settings)... took 286.0062ms
[debug]       Load.apply: structureIndex took 90.1732ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\eduar\IdeaProjects\techprep\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 11382.8063ms
[debug]     Load.loadUnit: defsScala took 0.0071ms
[debug] [Loading] Scanning directory C:\Users\eduar\IdeaProjects\techprep
[debug]       Load.loadUnit: mkEval took 0.6948ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.0976 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 88.5864ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\eduar\IdeaProjects\techprep, plugins: List(<none>))) took 97.2489ms
[debug] [Loading] Done in C:\Users\eduar\IdeaProjects\techprep, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 6683.6608ms
[debug]     Load.loadUnit: cleanEvalClasses took 80.5628ms
[debug]   Load.loadUnit(file:/C:/Users/eduar/IdeaProjects/techprep/, ...) took 18155.0193ms
[debug] Load.apply: load took 18172.7987ms
[debug] Load.apply: resolveProjects took 0.1734ms
[debug] Load.apply: finalTransforms took 104.1496ms
[debug] Load.apply: config.delegates took 0.4856ms
[debug] Load.apply: Def.make(settings)... took 218.0332ms
[debug] Load.apply: structureIndex took 59.4512ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to techprep (in build file:/C:/Users/eduar/IdeaProjects/techprep/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52613 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52613, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to techprep (in build file:/C:/Users/eduar/IdeaProjects/techprep/)
[debug] > Exec(idea-shell, None, None)
